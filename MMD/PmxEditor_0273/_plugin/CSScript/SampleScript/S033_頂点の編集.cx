<?xml version="1.0"?>
<CSScriptData xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <ScriptType>CS2</ScriptType>
  <CompilerVersion>4</CompilerVersion>
  <ReferenceAssemblies>
    <string>System.dll</string>
    <string>System.Core.dll</string>
    <string>System.Data.dll</string>
    <string>System.Data.DataSetExtensions.dll</string>
    <string>System.Deployment.dll</string>
    <string>System.Drawing.dll</string>
    <string>System.Windows.Forms.dll</string>
    <string>System.Xml.dll</string>
    <string>System.Xml.Linq.dll</string>
    <string>Microsoft.CSharp.dll</string>
  </ReferenceAssemblies>
  <UsingText>using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;
using PEPlugin;
using PEPlugin.SDX;
using PEPlugin.Pmx;
using PEPlugin.Pmd;
using PEPlugin.Vmd;
using PEPlugin.Vme;
using PEPlugin.Form;
using PEPlugin.View;
using PXCPlugin;
using SlimDX;
using SlimDX.Direct3D9;
using IES = PEPlugin.Vme.IPEVmeEventState;
using IBS = PEPlugin.Vme.IPEVmeBoneState;
using ISS = PEPlugin.Vme.IPEVmeSingleValueState;
using IMS = PEPlugin.Vme.IPEVmeSingleValueState;
using ICS = PEPlugin.Vme.IPEVmeCameraState;
using ILS = PEPlugin.Vme.IPEVmeLightState;
</UsingText>
  <FullCodeText>
// using項目はメニューから一括管理

// Scriptプラグインクラス(クラス名変更不可)
public class CSScriptClass : PEPluginClass
{
    // コンストラクタ
    public CSScriptClass() : base()
    {
        // 起動オプション
        // boot時実行(true/false), プラグインメニューへの登録(true/false), メニュー登録名("")
        m_option = new PEPluginOption(false, true, "CSScript生成プラグイン");
    }

    // エントリポイント
    public override void Run(IPERunArgs args)
    {
        base.Run(args);
        try {
            // ここへ処理を追加してください.
            

        }
        catch (Exception ex) {
            MessageBox.Show(ex.Message, "エラー", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        }
    }
}
</FullCodeText>
  <CodeText>
// ---- サンプルコード ----
// 頂点の編集
//

// 標準ヘッダで定義されている接続変数を使用

IPXVertex v = vertex[0];	    // 対象の頂点

v.Position = new V3(0, 0, 0);   // 位置
v.Normal = new V3(0, 1, 0);     // 法線
v.EdgeScale = 1;                // エッジ倍率

v.UV = new V2(0, 0);            // UV座標
v.UVA1 = new V4(1, 1, 0, 1);    // 追加UV UVA1～4

// BDEF1 : 単ボーン100%
v.Bone1 = bone[0];
v.Weight1 = 1;

// BDEF2 : 2ボーン(計100%)
v.Bone1 = bone[0];
v.Bone2 = bone[1];
v.Weight1 = 0.3f;   // 30%
v.Weight2 = 0.7f;   // 70%

// BDEF4 : 4ボーン
v.Bone1 = bone[0];
v.Bone2 = bone[1];
v.Bone3 = bone[2];
v.Bone4 = bone[3];
v.Weight1 = 0.25f;  // 25%
v.Weight2 = 0.25f;
v.Weight3 = 0.25f;
v.Weight4 = 0.25f;

// SDEF
v.SDEF = true;
v.SDEF_C = new V3();    // SDEFパラメータ(値は省略)
v.SDEF_R0 = new V3();
v.SDEF_R1 = new V3();

// QDEF
v.QDEF = true;

</CodeText>
  <CodeHeader>//
// ---- 簡易編集用ヘッダコード ----

// 常用接続変数一括登録

// ホスト配下
IPEPluginHost host = args.Host;
IPEBuilder builder = host.Builder;
IPEShortBuilder bd = host.Builder.SC;		// 短絡系ビルダ
IPXPmxBuilder bdx = host.Builder.Pmx;		// PMXビルダ
IPEConnector connect = host.Connector;
IPEPMDViewConnector view = host.Connector.View.PMDView;

// PMX関連
IPXPmx pmx = connect.Pmx.GetCurrentState();     // PMX取得

IPXHeader header = pmx.Header;                  // header   :ヘッダ
IPXModelInfo info = pmx.ModelInfo;              // info     :モデル情報
IList&lt;IPXVertex&gt; vertex = pmx.Vertex;           // vertex   :頂点   | リスト
IList&lt;IPXMaterial&gt; material = pmx.Material;     // material :材質   | リスト
IList&lt;IPXBone&gt; bone = pmx.Bone;                 // bone     :ボーン | リスト
IList&lt;IPXMorph&gt; morph = pmx.Morph;				// morph    :モーフ | リスト
IList&lt;IPXNode&gt; node = pmx.Node;					// node     :表示枠 | リスト
IList&lt;IPXBody&gt; body = pmx.Body;                 // body     :剛体   | リスト
IList&lt;IPXJoint&gt; joint = pmx.Joint;              // joint    :Joint  | リスト
IList&lt;IPXSoftBody&gt; sbody = pmx.SoftBody;        // sbody    :SoftBody  | リスト

</CodeHeader>
  <CodeFooter>//
// ---- 簡易編集用フッタコード ----

// 更新処理
// デフォルト設定ではフッタコードはOFF

// PMX更新
connect.Pmx.Update(pmx);

// Form更新
connect.Form.UpdateList(UpdateObject.All);  // 重い場合は引数を変更して個別に更新

// View更新
connect.View.PMDView.UpdateModel();         // Viewの更新が不要な場合はコメントアウト
connect.View.PMDView.UpdateView();


</CodeFooter>
  <CodeHeader_CPugin>//
// ---- 簡易編集用ヘッダコード ----

// 常用接続変数一括登録
IPXPmxBuilder bdx = m_bld;		// PMXビルダ

// PMX関連
IPXPmx pmx = PXCBridge.GetCurrentPmx(args.Connector);     // PMX取得

IPXHeader header = pmx.Header;                  // header   :ヘッダ
IPXModelInfo info = pmx.ModelInfo;              // info     :モデル情報
IList&lt;IPXVertex&gt; vertex = pmx.Vertex;           // vertex   :頂点   | リスト
IList&lt;IPXMaterial&gt; material = pmx.Material;     // material :材質   | リスト
IList&lt;IPXBone&gt; bone = pmx.Bone;                 // bone     :ボーン | リスト
IList&lt;IPXMorph&gt; morph = pmx.Morph;				// morph    :モーフ | リスト
IList&lt;IPXNode&gt; node = pmx.Node;					// node     :表示枠 | リスト
IList&lt;IPXBody&gt; body = pmx.Body;                 // body     :剛体   | リスト
IList&lt;IPXJoint&gt; joint = pmx.Joint;              // joint    :Joint  | リスト
IList&lt;IPXSoftBody&gt; sbody = pmx.SoftBody;        // sbody    :SoftBody  | リスト

</CodeHeader_CPugin>
  <CodeFooter_CPugin>//
// ---- 簡易編集用フッタコード ----

// 更新処理
// デフォルト設定ではフッタコードはOFF

// PMX更新
PXCBridge.UpdatePmx(args.Connector, pmx);

</CodeFooter_CPugin>
  <EnableHeader>true</EnableHeader>
  <EnableFooter>true</EnableFooter>
  <EnableCPluginMode>false</EnableCPluginMode>
  <ActivePages>1</ActivePages>
</CSScriptData>